on:
  workflow_call:
    inputs:
      directory:
        description: Root directory of the track
        required: true
        type: string
        default: .

jobs:
  release-track:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: "npm"
          cache-dependency-path: ${{ inputs.directory }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ inputs.directory }}
        run: npm install

      - name: Build track
        working-directory: ${{ inputs.directory }}
        run: npm run build

      - id: get_package_json
        run: |
          content=`cat ${{ inputs.directory }}/package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"

      - name: Make an output directory for assembling zipfile contents
        run: mkdir track-temp && mkdir "track-temp/${{ fromJson(steps.get_package_json.outputs.packageJson).name }}"

      - name: Move required files into output directory
        run: mv ${{ inputs.directory }}/package.json ${{ inputs.directory }}/track-dist "track-temp/${{ fromJson(steps.get_package_json.outputs.packageJson).name }}/"

      - name: Zip output
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r "${{ fromJson(steps.get_package_json.outputs.packageJson).name }}.zip" "track-temp/${{ fromJson(steps.get_package_json.outputs.packageJson).name }}"

      - name: ls
        run: ls -al

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            ${{ fromJson(steps.get_package_json.outputs.packageJson).name }}.zip
